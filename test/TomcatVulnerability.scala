import org.specs2.mutable.Specification
import dispatch._, Defaults._

class TomcatVulnerability extends Specification {

  val baseUrl = "http://localhost:8080/antarcticle"

  "request" should {

    "return not found for manager page with encoded url" in {
      val req = url(baseUrl + "%2F%5C..%2Fmanager%2Fhtml")
      val response = Http(req OK as.String).either
      val result = response() match {
        case Left(StatusCode(code))    => code
      }
      result.mustEqual(404)
    }

    "return not found some unix file with encoded url" in {
      val req = url(baseUrl + "%2F%5c..%2F..%2Fetc%2Fpasswd")
      val response = Http(req OK as.String).either
      val result = response() match {
        case Left(StatusCode(code))    => code
      }
      result.mustEqual(404)
    }

    "return not found some unix file with encoded url 2" in {
      val req = url(baseUrl + "%2F%5c..%2Fetc%2Fpasswd")
      val response = Http(req OK as.String).either
      val result = response() match {
        case Left(StatusCode(code))    => code
      }
      result.mustEqual(404)
    }

    "return not found some unix file with encoded url 3" in {
      val req = url(baseUrl + "%2F..%2Fetc%2Fpasswd")
      val response = Http(req OK as.String).either
      val result = response() match {
        case Left(StatusCode(code))    => code
      }
      result.mustEqual(404)
    }

  }
}
