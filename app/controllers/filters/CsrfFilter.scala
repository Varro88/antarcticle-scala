package controllers.filters

import play.api.mvc._
import scala.concurrent.Future
import play.api.mvc.Results._
import scala.Some
import play.api.mvc.SimpleResult

/**
 * All data modification requests (POST, PUT, DELETE) are submitted by JS client code.
 * This filter ensures that nobody can perform CSRF attack by making user submit
 * a form from external resource while Antarcticle session is still active
 */
object CsrfFilter extends Filter {
  def apply(next: (RequestHeader) => Future[SimpleResult])(rh: RequestHeader)  = {
    rh.method  match {
      case "POST" | "PUT" | "DELETE" =>
        rh.headers.get("X-Requested-With") match {
          case Some("XMLHttpRequest") => next(rh)
          case _ => Future.successful(Forbidden("This request was generated by unauthorized application or resource"))
        }
      case _ => next(rh)
    }
  }
}
